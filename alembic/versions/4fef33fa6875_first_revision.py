"""First revision

Revision ID: 4fef33fa6875
Revises: 
Create Date: 2024-01-03 14:16:33.090755

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4fef33fa6875'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('attachments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=False),
    sa.Column('entity_type', sa.String(length=10), nullable=False),
    sa.Column('attachment_type', sa.String(length=15), nullable=False),
    sa.Column('raw_attachment_url', sa.String(), nullable=False),
    sa.Column('raw_attachment_thumbnail_128_url', sa.String(), nullable=True),
    sa.Column('raw_attachment_thumbnail_256_url', sa.String(), nullable=True),
    sa.Column('raw_attachment_thumbnail_512_url', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bank_account',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('api_account_id', sa.String(), nullable=False),
    sa.Column('iban', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('created', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_accessed', sa.DateTime(timezone=True), nullable=True),
    sa.Column('institution_id', sa.String(), nullable=False),
    sa.Column('institution_name', sa.String(), nullable=True),
    sa.Column('institution_logo', sa.String(), nullable=True),
    sa.Column('is_linked', sa.Boolean(), nullable=False),
    sa.Column('is_revoked', sa.Boolean(), nullable=False),
    sa.Column('user_count', sa.Integer(), nullable=False),
    sa.Column('expiration_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bank_account_api_account_id'), 'bank_account', ['api_account_id'], unique=False)
    op.create_table('funder',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('url', sa.String(length=512), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', name='unique funder name')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=64), nullable=True),
    sa.Column('last_name', sa.String(length=64), nullable=True),
    sa.Column('biography', sa.String(length=512), nullable=True),
    sa.Column('role', sa.String(length=13), nullable=False),
    sa.Column('deleted', sa.Boolean(), nullable=False),
    sa.Column('hidden', sa.Boolean(), nullable=False),
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('bng',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('iban', sa.String(length=64), nullable=False),
    sa.Column('expires_on', sa.DateTime(timezone=True), nullable=False),
    sa.Column('consent_id', sa.String(length=64), nullable=False),
    sa.Column('access_token', sa.String(length=2048), nullable=False),
    sa.Column('last_import_on', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('regulation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('description', sa.String(length=512), nullable=False),
    sa.Column('funder_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['funder_id'], ['funder.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'funder_id', name='unique regulation names per funder')
    )
    op.create_table('requisition',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('institution_id', sa.String(), nullable=False),
    sa.Column('api_requisition_id', sa.String(), nullable=False),
    sa.Column('reference_id', sa.String(), nullable=False),
    sa.Column('callback_handled', sa.Boolean(), nullable=False),
    sa.Column('status', sa.String(length=2), nullable=False),
    sa.Column('n_days_history', sa.Integer(), nullable=False),
    sa.Column('n_days_access', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_bank_account_roles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('bank_account_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(length=5), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['bank_account_id'], ['bank_account.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'bank_account_id', 'role')
    )
    op.create_table('grant',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('reference', sa.String(length=128), nullable=False),
    sa.Column('budget', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('income', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('expenses', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('regulation_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['regulation_id'], ['regulation.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'regulation_id', name='unique grant names per regulation'),
    sa.UniqueConstraint('reference'),
    sa.UniqueConstraint('reference', name='unique grant reference')
    )
    op.create_table('requisition_bank_account',
    sa.Column('requisition_id', sa.Integer(), nullable=True),
    sa.Column('bank_account_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['bank_account_id'], ['bank_account.id'], ),
    sa.ForeignKeyConstraint(['requisition_id'], ['requisition.id'], )
    )
    op.create_table('user_regulation_roles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('regulation_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(length=14), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['regulation_id'], ['regulation.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'regulation_id', 'role')
    )
    op.create_table('initiative',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('description', sa.String(length=512), nullable=False),
    sa.Column('purpose', sa.String(length=64), nullable=False),
    sa.Column('target_audience', sa.String(length=64), nullable=False),
    sa.Column('owner', sa.String(length=64), nullable=False),
    sa.Column('owner_email', sa.String(length=320), nullable=False),
    sa.Column('legal_entity', sa.String(length=25), nullable=False),
    sa.Column('address_applicant', sa.String(length=256), nullable=False),
    sa.Column('kvk_registration', sa.String(length=16), nullable=True),
    sa.Column('location', sa.String(length=64), nullable=False),
    sa.Column('image', sa.String(length=128), nullable=True),
    sa.Column('hidden_sponsors', sa.Boolean(), nullable=False),
    sa.Column('hidden', sa.Boolean(), nullable=False),
    sa.Column('budget', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('justified', sa.Boolean(), nullable=False),
    sa.Column('income', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('expenses', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('grant_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['grant_id'], ['grant.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', name='unique initiative name')
    )
    op.create_index(op.f('ix_initiative_name'), 'initiative', ['name'], unique=False)
    op.create_table('user_grant_roles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('grant_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['grant_id'], ['grant.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'grant_id')
    )
    op.create_table('activity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('description', sa.String(length=512), nullable=False),
    sa.Column('purpose', sa.String(length=64), nullable=False),
    sa.Column('target_audience', sa.String(length=64), nullable=False),
    sa.Column('image', sa.String(length=128), nullable=True),
    sa.Column('hidden', sa.Boolean(), nullable=False),
    sa.Column('finished', sa.Boolean(), nullable=False),
    sa.Column('finished_description', sa.String(length=512), nullable=True),
    sa.Column('budget', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('income', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('expenses', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('initiative_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['initiative_id'], ['initiative.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'initiative_id', name='unique activity name per initiative')
    )
    op.create_table('debitcard',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('card_number', sa.String(length=64), nullable=False),
    sa.Column('income', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('expenses', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('initiative_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['initiative_id'], ['initiative.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('card_number')
    )
    op.create_table('user_initiative_roles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('initiative_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['initiative_id'], ['initiative.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'initiative_id')
    )
    op.create_table('payment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transaction_id', sa.String(), nullable=True),
    sa.Column('entry_reference', sa.String(), nullable=True),
    sa.Column('end_to_end_id', sa.String(), nullable=True),
    sa.Column('booking_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('transaction_amount', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('creditor_name', sa.String(), nullable=True),
    sa.Column('creditor_account', sa.String(), nullable=True),
    sa.Column('debtor_name', sa.String(), nullable=True),
    sa.Column('debtor_account', sa.String(), nullable=True),
    sa.Column('route', sa.String(length=8), nullable=False),
    sa.Column('type', sa.String(length=10), nullable=False),
    sa.Column('remittance_information_unstructured', sa.String(), nullable=True),
    sa.Column('remittance_information_structured', sa.String(), nullable=True),
    sa.Column('short_user_description', sa.String(), nullable=True),
    sa.Column('long_user_description', sa.String(), nullable=True),
    sa.Column('hidden', sa.Boolean(), nullable=False),
    sa.Column('activity_id', sa.Integer(), nullable=True),
    sa.Column('initiative_id', sa.Integer(), nullable=True),
    sa.Column('debit_card_id', sa.Integer(), nullable=True),
    sa.Column('bank_account_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['activity_id'], ['activity.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['bank_account_id'], ['bank_account.id'], ),
    sa.ForeignKeyConstraint(['debit_card_id'], ['debitcard.id'], ),
    sa.ForeignKeyConstraint(['initiative_id'], ['initiative.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('transaction_id', name='unique transaction id')
    )
    op.create_index(op.f('ix_payment_booking_date'), 'payment', ['booking_date'], unique=False)
    op.create_index(op.f('ix_payment_transaction_id'), 'payment', ['transaction_id'], unique=False)
    op.create_table('user_activity_roles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('activity_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['activity_id'], ['activity.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'activity_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_activity_roles')
    op.drop_index(op.f('ix_payment_transaction_id'), table_name='payment')
    op.drop_index(op.f('ix_payment_booking_date'), table_name='payment')
    op.drop_table('payment')
    op.drop_table('user_initiative_roles')
    op.drop_table('debitcard')
    op.drop_table('activity')
    op.drop_table('user_grant_roles')
    op.drop_index(op.f('ix_initiative_name'), table_name='initiative')
    op.drop_table('initiative')
    op.drop_table('user_regulation_roles')
    op.drop_table('requisition_bank_account')
    op.drop_table('grant')
    op.drop_table('user_bank_account_roles')
    op.drop_table('requisition')
    op.drop_table('regulation')
    op.drop_table('bng')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('funder')
    op.drop_index(op.f('ix_bank_account_api_account_id'), table_name='bank_account')
    op.drop_table('bank_account')
    op.drop_table('attachments')
    # ### end Alembic commands ###
